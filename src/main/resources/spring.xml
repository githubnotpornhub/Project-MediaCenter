<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--读取jdbc.properties配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置数据源-->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--最大连接数-->
<!--        <property name="maxTotal" value="${jdbc.maxTotal}"/>-->
        <!--最大空闲连接-->
<!--        <property name="maxIdle" value="${jdbc.maxIdle}"/>-->
<!--        &lt;!&ndash;初始化连接数&ndash;&gt;-->
<!--        <property name="initialSize" value="${jdbc.initialSize}"/>-->
    </bean>

    <!--事务管理器配置-->
    <tx:annotation-driven transaction-manager="transactionManger"/>
    <bean id="transactionManger" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--定义通知，配置切入点-->
    <tx:advice id="txAdvice" transaction-manager="transactionManger">
        <tx:attributes>
            <!--事务传播行为-->
            <!--传播行为默认为REQUIRED(当前方法必须运行在事务中，若当前事物存在，，方法将会在该事务中运行)-->
            <tx:method name="save*" />
            <tx:method name="insert*"/>
            <tx:method name="add*"/>
            <tx:method name="create"/>
            <tx:method name="delete*"/>
            <tx:method name="update*"/>
            <!--SUPPORTS表示当前方法不需要事务上下文，但是如果当前事物存在，则该方法会在这个事务中运行-->
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--AOP切面-->
    <aop:config>
         <aop:advisor advice-ref="txAdvice" pointcut="execution(* media.service.*.*(..))"/>
    </aop:config>

    <!--配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>

        <!-- 配置分页插件 -->
        <!--分页插件pagehelper4.x版本与5.x版本在mybatis配置文件和spring配置文件中的配置方式不太一样-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            <!--使用的数据库类型-->
                            dialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--Spring和Mybatis整合：配置扫描DAO接口的包，注入Spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="media.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--注解注入-->
    <context:component-scan base-package="media.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

</beans>